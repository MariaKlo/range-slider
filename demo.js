(()=>{"use strict";var e,t={173:(e,t,r)=>{var i=r(755),n=r.n(i);r(822);const o=new class{renderFirstSlider(e,t){const r=document.getElementById(e);r.firstElementChild&&r.removeChild(r.firstElementChild),n()("#api_first").sliderPlugin({max:Number(t[0]),min:Number(t[1]),step:Number(t[2]),defaultValue:Number(t[3]),valueSecond:Number(t[4]),isMultiThumb:Boolean(t[5]),showBubble:Boolean(t[6]),isVertical:Boolean(t[7]),showTicks:Boolean(t[8]),barColor:String(t[9]),thumbColor:String(t[10]),bubbleColor:String(t[11])})}renderSecondSlider(e,t){const r=document.getElementById(e);r.firstElementChild&&r.removeChild(r.firstElementChild),n()("#api_second").sliderPlugin({max:Number(t[0]),min:Number(t[1]),step:Number(t[2]),defaultValue:Number(t[3]),valueSecond:Number(t[4]),isMultiThumb:Boolean(t[5]),showBubble:Boolean(t[6]),isVertical:Boolean(t[7]),showTicks:Boolean(t[8]),barColor:String(t[9]),thumbColor:String(t[10]),bubbleColor:String(t[11])})}renderThirdSlider(e,t){const r=document.getElementById(e);r.firstElementChild&&r.removeChild(r.firstElementChild),n()("#api_third").sliderPlugin({max:Number(t[0]),min:Number(t[1]),step:Number(t[2]),defaultValue:Number(t[3]),valueSecond:Number(t[4]),isMultiThumb:Boolean(t[5]),showBubble:Boolean(t[6]),isVertical:Boolean(t[7]),showTicks:Boolean(t[8]),barColor:String(t[9]),thumbColor:String(t[10]),bubbleColor:String(t[11])})}renderFourthSlider(e,t){const r=document.getElementById(e);r.firstElementChild&&r.removeChild(r.firstElementChild),n()("#api_fourth").sliderPlugin({max:Number(t[0]),min:Number(t[1]),step:Number(t[2]),defaultValue:Number(t[3]),valueSecond:Number(t[4]),isMultiThumb:Boolean(t[5]),showBubble:Boolean(t[6]),isVertical:Boolean(t[7]),showTicks:Boolean(t[8]),barColor:String(t[9]),thumbColor:String(t[10]),bubbleColor:String(t[11])})}},d=o;class a{constructor(){Object.defineProperty(this,"stateForFirstApi",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"stateForSecondApi",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"stateForThirdApi",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"stateForFourthApi",{enumerable:!0,configurable:!0,writable:!0,value:[]}),this.init()}init(){this.callFirstApi(),this.callSecondApi(),this.callThirdApi(),this.callFourthApi()}setState(e){this.stateForFirstApi=e,this.stateForSecondApi=e,this.stateForThirdApi=e,this.stateForFourthApi=e}callFirstApi(){this.getDataFromPanel(),this.getDataFromState()}callSecondApi(){this.getDataFromSecondPanel(),this.getDataFromSecondState()}callThirdApi(){this.getDataFromThirdPanel(),this.getDataFromThirdState()}callFourthApi(){this.getDataFromFourthPanel(),this.getDataFromFourthState()}getDataFromPanel(){const e=e=>{const t=document.getElementById(e);return Number(t.value)},t=e=>{const t=document.getElementById(e);return Boolean(t.checked)},r=e=>{const t=document.getElementById(e);return String(t.value)};this.setState([e("max1"),e("min1"),e("step1"),e("defaultValue1"),e("valueSecond1"),t("isMultiThumb1"),t("showBubble1"),t("isVertical1"),t("showTicks1"),r("barColor1"),r("thumbColor1"),r("bubbleColor1")])}spyOnSlider(e){var t;const r=null===(t=document.getElementById(e))||void 0===t?void 0:t.firstChild,i=()=>{const e=r.getAttribute("default-value");if(e){document.getElementById("defaultValue1").value=e,this.stateForFirstApi[3]=Number(e)}const t=r.getAttribute("first-value");if(t){document.getElementById("defaultValue1").value=t,this.stateForFirstApi[3]=Number(t)}const i=r.getAttribute("second-value");if(i){document.getElementById("valueSecond1").value=i,this.stateForFirstApi[4]=Number(i)}};r.addEventListener("mousemove",i),r.addEventListener("click",i)}getDataFromState(){const e=document.getElementById("max1"),t=document.getElementById("min1"),r=document.getElementById("step1"),i=document.getElementById("defaultValue1"),n=document.getElementById("valueSecond1"),o=()=>{this.stateForFirstApi[0]=Number(e.value),this.stateForFirstApi[1]=Number(t.value),this.stateForFirstApi[2]=Number(r.value),this.stateForFirstApi[3]=Number(i.value),this.stateForFirstApi[4]=Number(n.value),d.renderFirstSlider("api_first",this.stateForFirstApi),this.spyOnSlider("api_first")};e.addEventListener("change",o),t.addEventListener("change",o),r.addEventListener("change",o),i.addEventListener("change",o),n.addEventListener("change",o);const a=document.getElementById("isMultiThumb1"),s=document.getElementById("showBubble1"),l=document.getElementById("isVertical1"),u=document.getElementById("showTicks1"),h=()=>{this.stateForFirstApi[5]=Boolean(a.checked),this.stateForFirstApi[6]=Boolean(s.checked),this.stateForFirstApi[7]=Boolean(l.checked),this.stateForFirstApi[8]=Boolean(u.checked),d.renderFirstSlider("api_first",this.stateForFirstApi),this.spyOnSlider("api_first")};a.addEventListener("change",h),s.addEventListener("change",h),l.addEventListener("change",h),u.addEventListener("change",h);const c=document.getElementById("barColor1"),m=document.getElementById("thumbColor1"),g=document.getElementById("bubbleColor1"),b=()=>{this.stateForFirstApi[9]=String(c.value),this.stateForFirstApi[10]=String(m.value),this.stateForFirstApi[11]=String(g.value),d.renderFirstSlider("api_first",this.stateForFirstApi),this.spyOnSlider("api_first")};c.addEventListener("change",b),m.addEventListener("change",b),g.addEventListener("change",b),d.renderFirstSlider("api_first",this.stateForFirstApi),this.spyOnSlider("api_first")}getDataFromSecondPanel(){const e=e=>{const t=document.getElementById(e);return Number(t.value)},t=e=>{const t=document.getElementById(e);return Boolean(t.checked)},r=e=>{const t=document.getElementById(e);return String(t.value)};this.setState([e("max2"),e("min2"),e("step2"),e("defaultValue2"),e("valueSecond2"),t("isMultiThumb2"),t("showBubble2"),t("isVertical2"),t("showTicks2"),r("barColor2"),r("thumbColor2"),r("bubbleColor2")])}spyOnSecondSlider(e){var t;const r=null===(t=document.getElementById(e))||void 0===t?void 0:t.firstChild,i=()=>{const e=r.getAttribute("default-value");if(e){document.getElementById("defaultValue2").value=e,this.stateForSecondApi[3]=Number(e)}const t=r.getAttribute("first-value");if(t){document.getElementById("defaultValue2").value=t,this.stateForSecondApi[3]=Number(t)}const i=r.getAttribute("second-value");if(i){document.getElementById("valueSecond2").value=i,this.stateForSecondApi[4]=Number(i)}};r.addEventListener("mousemove",i),r.addEventListener("click",i)}getDataFromSecondState(){const e=document.getElementById("max2"),t=document.getElementById("min2"),r=document.getElementById("step2"),i=document.getElementById("defaultValue2"),n=document.getElementById("valueSecond2"),o=()=>{this.stateForSecondApi[0]=Number(e.value),this.stateForSecondApi[1]=Number(t.value),this.stateForSecondApi[2]=Number(r.value),this.stateForSecondApi[3]=Number(i.value),this.stateForSecondApi[4]=Number(n.value),d.renderSecondSlider("api_second",this.stateForSecondApi),this.spyOnSecondSlider("api_second")};e.addEventListener("change",o),t.addEventListener("change",o),r.addEventListener("change",o),i.addEventListener("change",o),n.addEventListener("change",o);const a=document.getElementById("isMultiThumb2"),s=document.getElementById("showBubble2"),l=document.getElementById("isVertical2"),u=document.getElementById("showTicks2"),h=()=>{this.stateForSecondApi[5]=Boolean(a.checked),this.stateForSecondApi[6]=Boolean(s.checked),this.stateForSecondApi[7]=Boolean(l.checked),this.stateForSecondApi[8]=Boolean(u.checked),d.renderSecondSlider("api_second",this.stateForSecondApi),this.spyOnSecondSlider("api_second")};a.addEventListener("change",h),s.addEventListener("change",h),l.addEventListener("change",h),u.addEventListener("change",h);const c=document.getElementById("barColor2"),m=document.getElementById("thumbColor2"),g=document.getElementById("bubbleColor2"),b=()=>{this.stateForSecondApi[9]=String(c.value),this.stateForSecondApi[10]=String(m.value),this.stateForSecondApi[11]=String(g.value),d.renderSecondSlider("api_second",this.stateForSecondApi),this.spyOnSecondSlider("api_second")};c.addEventListener("change",b),m.addEventListener("change",b),g.addEventListener("change",b),d.renderSecondSlider("api_second",this.stateForSecondApi),this.spyOnSecondSlider("api_second")}getDataFromThirdPanel(){const e=e=>{const t=document.getElementById(e);return Number(t.value)},t=e=>{const t=document.getElementById(e);return Boolean(t.checked)},r=e=>{const t=document.getElementById(e);return String(t.value)};this.setState([e("max3"),e("min3"),e("step3"),e("defaultValue3"),e("valueSecond3"),t("isMultiThumb3"),t("showBubble3"),t("isVertical3"),t("showTicks3"),r("barColor3"),r("thumbColor3"),r("bubbleColor3")])}spyOnThirdSlider(e){var t;const r=null===(t=document.getElementById(e))||void 0===t?void 0:t.firstChild,i=()=>{const e=r.getAttribute("default-value");if(e){document.getElementById("defaultValue3").value=e,this.stateForThirdApi[3]=Number(e)}const t=r.getAttribute("first-value");if(t){document.getElementById("defaultValue3").value=t,this.stateForThirdApi[3]=Number(t)}const i=r.getAttribute("second-value");if(i){document.getElementById("valueSecond3").value=i,this.stateForThirdApi[4]=Number(i)}};r.addEventListener("mousemove",i),r.addEventListener("click",i)}getDataFromThirdState(){const e=document.getElementById("max3"),t=document.getElementById("min3"),r=document.getElementById("step3"),i=document.getElementById("defaultValue3"),n=document.getElementById("valueSecond3"),o=()=>{this.stateForThirdApi[0]=Number(e.value),this.stateForThirdApi[1]=Number(t.value),this.stateForThirdApi[2]=Number(r.value),this.stateForThirdApi[3]=Number(i.value),this.stateForThirdApi[4]=Number(n.value),d.renderThirdSlider("api_third",this.stateForThirdApi),this.spyOnThirdSlider("api_third")};e.addEventListener("change",o),t.addEventListener("change",o),r.addEventListener("change",o),i.addEventListener("change",o),n.addEventListener("change",o);const a=document.getElementById("isMultiThumb3"),s=document.getElementById("showBubble3"),l=document.getElementById("isVertical3"),u=document.getElementById("showTicks3"),h=()=>{this.stateForThirdApi[5]=Boolean(a.checked),this.stateForThirdApi[6]=Boolean(s.checked),this.stateForThirdApi[7]=Boolean(l.checked),this.stateForThirdApi[8]=Boolean(u.checked),d.renderThirdSlider("api_third",this.stateForThirdApi),this.spyOnThirdSlider("api_third")};a.addEventListener("change",h),s.addEventListener("change",h),l.addEventListener("change",h),u.addEventListener("change",h);const c=document.getElementById("barColor3"),m=document.getElementById("thumbColor3"),g=document.getElementById("bubbleColor3"),b=()=>{this.stateForThirdApi[9]=String(c.value),this.stateForThirdApi[10]=String(m.value),this.stateForThirdApi[11]=String(g.value),d.renderThirdSlider("api_third",this.stateForThirdApi),this.spyOnThirdSlider("api_third")};c.addEventListener("change",b),m.addEventListener("change",b),g.addEventListener("change",b),d.renderThirdSlider("api_third",this.stateForThirdApi),this.spyOnThirdSlider("api_third")}getDataFromFourthPanel(){const e=e=>{const t=document.getElementById(e);return Number(t.value)},t=e=>{const t=document.getElementById(e);return Boolean(t.checked)},r=e=>{const t=document.getElementById(e);return String(t.value)};this.setState([e("max4"),e("min4"),e("step4"),e("defaultValue4"),e("valueSecond4"),t("isMultiThumb4"),t("showBubble4"),t("isVertical4"),t("showTicks4"),r("barColor4"),r("thumbColor4"),r("bubbleColor4")])}spyOnFourthSlider(e){var t;const r=null===(t=document.getElementById(e))||void 0===t?void 0:t.firstChild,i=()=>{const e=r.getAttribute("default-value");if(e){document.getElementById("defaultValue4").value=e,this.stateForFourthApi[3]=Number(e)}const t=r.getAttribute("first-value");if(t){document.getElementById("defaultValue4").value=t,this.stateForFourthApi[3]=Number(t)}const i=r.getAttribute("second-value");if(i){document.getElementById("valueSecond4").value=i,this.stateForFourthApi[4]=Number(i)}};r.addEventListener("mousemove",i),r.addEventListener("click",i)}getDataFromFourthState(){const e=document.getElementById("max4"),t=document.getElementById("min4"),r=document.getElementById("step4"),i=document.getElementById("defaultValue4"),n=document.getElementById("valueSecond4"),o=()=>{this.stateForFourthApi[0]=Number(e.value),this.stateForFourthApi[1]=Number(t.value),this.stateForFourthApi[2]=Number(r.value),this.stateForFourthApi[3]=Number(i.value),this.stateForFourthApi[4]=Number(n.value),d.renderFourthSlider("api_fourth",this.stateForFourthApi),this.spyOnFourthSlider("api_fourth")};e.addEventListener("change",o),t.addEventListener("change",o),r.addEventListener("change",o),i.addEventListener("change",o),n.addEventListener("change",o);const a=document.getElementById("isMultiThumb4"),s=document.getElementById("showBubble4"),l=document.getElementById("isVertical4"),u=document.getElementById("showTicks4"),h=()=>{this.stateForFourthApi[5]=Boolean(a.checked),this.stateForFourthApi[6]=Boolean(s.checked),this.stateForFourthApi[7]=Boolean(l.checked),this.stateForFourthApi[8]=Boolean(u.checked),d.renderFourthSlider("api_fourth",this.stateForFourthApi),this.spyOnFourthSlider("api_fourth")};a.addEventListener("change",h),s.addEventListener("change",h),l.addEventListener("change",h),u.addEventListener("change",h);const c=document.getElementById("barColor4"),m=document.getElementById("thumbColor4"),g=document.getElementById("bubbleColor4"),b=()=>{this.stateForFourthApi[9]=String(c.value),this.stateForFourthApi[10]=String(m.value),this.stateForFourthApi[11]=String(g.value),d.renderFourthSlider("api_fourth",this.stateForFourthApi),this.spyOnFourthSlider("api_fourth")};c.addEventListener("change",b),m.addEventListener("change",b),g.addEventListener("change",b),d.renderFourthSlider("api_fourth",this.stateForFourthApi),this.spyOnFourthSlider("api_fourth")}}new a}},r={};function i(e){var n=r[e];if(void 0!==n)return n.exports;var o=r[e]={id:e,exports:{}};return t[e].call(o.exports,o,o.exports,i),o.exports}i.m=t,e=[],i.O=(t,r,n,o)=>{if(!r){var d=1/0;for(u=0;u<e.length;u++){for(var[r,n,o]=e[u],a=!0,s=0;s<r.length;s++)(!1&o||d>=o)&&Object.keys(i.O).every((e=>i.O[e](r[s])))?r.splice(s--,1):(a=!1,o<d&&(d=o));if(a){e.splice(u--,1);var l=n();void 0!==l&&(t=l)}}return t}o=o||0;for(var u=e.length;u>0&&e[u-1][2]>o;u--)e[u]=e[u-1];e[u]=[r,n,o]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={577:0,309:0};i.O.j=t=>0===e[t];var t=(t,r)=>{var n,o,[d,a,s]=r,l=0;if(d.some((t=>0!==e[t]))){for(n in a)i.o(a,n)&&(i.m[n]=a[n]);if(s)var u=s(i)}for(t&&t(r);l<d.length;l++)o=d[l],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return i.O(u)},r=self.webpackChunkslider_plugin=self.webpackChunkslider_plugin||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var n=i.O(void 0,[832,822],(()=>i(173)));n=i.O(n)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUEwQyxJQUE3QkQsRUFBZ0JDLEdBR3hELElBQUlDLEVBQXVCLENBQUNDLEVBQTRCQyxLQUN2RCxJQUdJM0MsRUFBVXdDLEdBSFQ5QixFQUFVa0MsRUFBYUMsR0FBV0YsRUFHaEI1QixFQUFJLEVBQzNCLEdBQUdMLEVBQVNvQyxNQUFNakksR0FBZ0MsSUFBeEIwSCxFQUFnQjFILEtBQWEsQ0FDdEQsSUFBSW1GLEtBQVk0QyxFQUNaN0MsRUFBb0JnQyxFQUFFYSxFQUFhNUMsS0FDckNELEVBQW9CUSxFQUFFUCxHQUFZNEMsRUFBWTVDLElBR2hELEdBQUc2QyxFQUFTLElBQUlwQyxFQUFTb0MsRUFBUTlDLEdBR2xDLElBREcyQyxHQUE0QkEsRUFBMkJDLEdBQ3JENUIsRUFBSUwsRUFBU00sT0FBUUQsSUFDekJ5QixFQUFVOUIsRUFBU0ssR0FDaEJoQixFQUFvQmdDLEVBQUVRLEVBQWlCQyxJQUFZRCxFQUFnQkMsSUFDckVELEVBQWdCQyxHQUFTLEtBRTFCRCxFQUFnQkMsR0FBVyxFQUU1QixPQUFPekMsRUFBb0JTLEVBQUVDLElBRzFCc0MsRUFBcUJDLEtBQWdDLDBCQUFJQSxLQUFnQywyQkFBSyxHQUNsR0QsRUFBbUJFLFFBQVFSLEVBQXFCUyxLQUFLLEtBQU0sSUFDM0RILEVBQW1CSSxLQUFPVixFQUFxQlMsS0FBSyxLQUFNSCxFQUFtQkksS0FBS0QsS0FBS0gsSyxHQzlDdkYsSUFBSUssRUFBc0JyRCxFQUFvQlMsT0FBRU4sRUFBVyxDQUFDLElBQUksTUFBTSxJQUFPSCxFQUFvQixPQUNqR3FELEVBQXNCckQsRUFBb0JTLEVBQUU0QyxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2xpZGVyLXBsdWdpbi93ZWJwYWNrL3J1bnRpbWUvY2h1bmsgbG9hZGVkIiwid2VicGFjazovL3NsaWRlci1wbHVnaW4vLi9zcmMvZGVtby1wYWdlL2NhbGxQbHVnaW4udHMiLCJ3ZWJwYWNrOi8vc2xpZGVyLXBsdWdpbi8uL3NyYy9kZW1vLXBhZ2UvcGFuZWwudHMiLCJ3ZWJwYWNrOi8vc2xpZGVyLXBsdWdpbi93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9zbGlkZXItcGx1Z2luL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3NsaWRlci1wbHVnaW4vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3NsaWRlci1wbHVnaW4vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9zbGlkZXItcGx1Z2luL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3NsaWRlci1wbHVnaW4vd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkZWZlcnJlZCA9IFtdO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5PID0gKHJlc3VsdCwgY2h1bmtJZHMsIGZuLCBwcmlvcml0eSkgPT4ge1xuXHRpZihjaHVua0lkcykge1xuXHRcdHByaW9yaXR5ID0gcHJpb3JpdHkgfHwgMDtcblx0XHRmb3IodmFyIGkgPSBkZWZlcnJlZC5sZW5ndGg7IGkgPiAwICYmIGRlZmVycmVkW2kgLSAxXVsyXSA+IHByaW9yaXR5OyBpLS0pIGRlZmVycmVkW2ldID0gZGVmZXJyZWRbaSAtIDFdO1xuXHRcdGRlZmVycmVkW2ldID0gW2NodW5rSWRzLCBmbiwgcHJpb3JpdHldO1xuXHRcdHJldHVybjtcblx0fVxuXHR2YXIgbm90RnVsZmlsbGVkID0gSW5maW5pdHk7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWQubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgW2NodW5rSWRzLCBmbiwgcHJpb3JpdHldID0gZGVmZXJyZWRbaV07XG5cdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBjaHVua0lkcy5sZW5ndGg7IGorKykge1xuXHRcdFx0aWYgKChwcmlvcml0eSAmIDEgPT09IDAgfHwgbm90RnVsZmlsbGVkID49IHByaW9yaXR5KSAmJiBPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLk8pLmV2ZXJ5KChrZXkpID0+IChfX3dlYnBhY2tfcmVxdWlyZV9fLk9ba2V5XShjaHVua0lkc1tqXSkpKSkge1xuXHRcdFx0XHRjaHVua0lkcy5zcGxpY2Uoai0tLCAxKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZ1bGZpbGxlZCA9IGZhbHNlO1xuXHRcdFx0XHRpZihwcmlvcml0eSA8IG5vdEZ1bGZpbGxlZCkgbm90RnVsZmlsbGVkID0gcHJpb3JpdHk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKGZ1bGZpbGxlZCkge1xuXHRcdFx0ZGVmZXJyZWQuc3BsaWNlKGktLSwgMSlcblx0XHRcdHZhciByID0gZm4oKTtcblx0XHRcdGlmIChyICE9PSB1bmRlZmluZWQpIHJlc3VsdCA9IHI7XG5cdFx0fVxuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59OyIsImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XHJcblxyXG5pbXBvcnQgJy4vanF1ZXJ5LmluZGV4JztcclxuXHJcbmNsYXNzIENhbGxQbHVnaW4ge1xyXG4gIHB1YmxpYyByZW5kZXJGaXJzdFNsaWRlcihpZDogc3RyaW5nLCBwYW5lbDogKG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmcpW10pIHtcclxuICAgIC8vIHJlbmRlciBzbGlkZXIgd2l0aCBpbmZvIGZyb20gcGFuZWxcclxuICAgIC8vIGRlbGV0ZSBkdXBsaWNhdGVzIG9mIHNsaWRlciB3aGVuIHBhbmVsIGlzIHVzZWRcclxuICAgIGNvbnN0IGVsZW0gPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xyXG4gICAgaWYgKGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQpIHtcclxuICAgICAgZWxlbS5yZW1vdmVDaGlsZChlbGVtLmZpcnN0RWxlbWVudENoaWxkKTtcclxuICAgIH1cclxuICAgICQoJyNhcGlfZmlyc3QnKS5zbGlkZXJQbHVnaW4oe1xyXG4gICAgICBtYXg6IE51bWJlcihwYW5lbFswXSksXHJcbiAgICAgIG1pbjogTnVtYmVyKHBhbmVsWzFdKSxcclxuICAgICAgc3RlcDogTnVtYmVyKHBhbmVsWzJdKSxcclxuICAgICAgZGVmYXVsdFZhbHVlOiBOdW1iZXIocGFuZWxbM10pLFxyXG4gICAgICB2YWx1ZVNlY29uZDogTnVtYmVyKHBhbmVsWzRdKSxcclxuICAgICAgaXNNdWx0aVRodW1iOiBCb29sZWFuKHBhbmVsWzVdKSxcclxuICAgICAgc2hvd0J1YmJsZTogQm9vbGVhbihwYW5lbFs2XSksXHJcbiAgICAgIGlzVmVydGljYWw6IEJvb2xlYW4ocGFuZWxbN10pLFxyXG4gICAgICBzaG93VGlja3M6IEJvb2xlYW4ocGFuZWxbOF0pLFxyXG4gICAgICBiYXJDb2xvcjogU3RyaW5nKHBhbmVsWzldKSxcclxuICAgICAgdGh1bWJDb2xvcjogU3RyaW5nKHBhbmVsWzEwXSksXHJcbiAgICAgIGJ1YmJsZUNvbG9yOiBTdHJpbmcocGFuZWxbMTFdKSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlbmRlclNlY29uZFNsaWRlcihpZDogc3RyaW5nLCBwYW5lbDogKG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmcpW10pIHtcclxuICAgIC8vIHJlbmRlciBzbGlkZXIgd2l0aCBpbmZvIGZyb20gcGFuZWxcclxuICAgIC8vIGRlbGV0ZSBkdXBsaWNhdGVzIG9mIHNsaWRlciB3aGVuIHBhbmVsIGlzIHVzZWRcclxuICAgIGNvbnN0IGVsZW0gPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xyXG4gICAgaWYgKGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQpIHtcclxuICAgICAgZWxlbS5yZW1vdmVDaGlsZChlbGVtLmZpcnN0RWxlbWVudENoaWxkKTtcclxuICAgIH1cclxuICAgICQoJyNhcGlfc2Vjb25kJykuc2xpZGVyUGx1Z2luKHtcclxuICAgICAgbWF4OiBOdW1iZXIocGFuZWxbMF0pLFxyXG4gICAgICBtaW46IE51bWJlcihwYW5lbFsxXSksXHJcbiAgICAgIHN0ZXA6IE51bWJlcihwYW5lbFsyXSksXHJcbiAgICAgIGRlZmF1bHRWYWx1ZTogTnVtYmVyKHBhbmVsWzNdKSxcclxuICAgICAgdmFsdWVTZWNvbmQ6IE51bWJlcihwYW5lbFs0XSksXHJcbiAgICAgIGlzTXVsdGlUaHVtYjogQm9vbGVhbihwYW5lbFs1XSksXHJcbiAgICAgIHNob3dCdWJibGU6IEJvb2xlYW4ocGFuZWxbNl0pLFxyXG4gICAgICBpc1ZlcnRpY2FsOiBCb29sZWFuKHBhbmVsWzddKSxcclxuICAgICAgc2hvd1RpY2tzOiBCb29sZWFuKHBhbmVsWzhdKSxcclxuICAgICAgYmFyQ29sb3I6IFN0cmluZyhwYW5lbFs5XSksXHJcbiAgICAgIHRodW1iQ29sb3I6IFN0cmluZyhwYW5lbFsxMF0pLFxyXG4gICAgICBidWJibGVDb2xvcjogU3RyaW5nKHBhbmVsWzExXSksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZW5kZXJUaGlyZFNsaWRlcihpZDogc3RyaW5nLCBwYW5lbDogKG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmcpW10pIHtcclxuICAgIC8vIHJlbmRlciBzbGlkZXIgd2l0aCBpbmZvIGZyb20gcGFuZWxcclxuICAgIC8vIGRlbGV0ZSBkdXBsaWNhdGVzIG9mIHNsaWRlciB3aGVuIHBhbmVsIGlzIHVzZWRcclxuICAgIGNvbnN0IGVsZW0gPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xyXG4gICAgaWYgKGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQpIHtcclxuICAgICAgZWxlbS5yZW1vdmVDaGlsZChlbGVtLmZpcnN0RWxlbWVudENoaWxkKTtcclxuICAgIH1cclxuICAgICQoJyNhcGlfdGhpcmQnKS5zbGlkZXJQbHVnaW4oe1xyXG4gICAgICBtYXg6IE51bWJlcihwYW5lbFswXSksXHJcbiAgICAgIG1pbjogTnVtYmVyKHBhbmVsWzFdKSxcclxuICAgICAgc3RlcDogTnVtYmVyKHBhbmVsWzJdKSxcclxuICAgICAgZGVmYXVsdFZhbHVlOiBOdW1iZXIocGFuZWxbM10pLFxyXG4gICAgICB2YWx1ZVNlY29uZDogTnVtYmVyKHBhbmVsWzRdKSxcclxuICAgICAgaXNNdWx0aVRodW1iOiBCb29sZWFuKHBhbmVsWzVdKSxcclxuICAgICAgc2hvd0J1YmJsZTogQm9vbGVhbihwYW5lbFs2XSksXHJcbiAgICAgIGlzVmVydGljYWw6IEJvb2xlYW4ocGFuZWxbN10pLFxyXG4gICAgICBzaG93VGlja3M6IEJvb2xlYW4ocGFuZWxbOF0pLFxyXG4gICAgICBiYXJDb2xvcjogU3RyaW5nKHBhbmVsWzldKSxcclxuICAgICAgdGh1bWJDb2xvcjogU3RyaW5nKHBhbmVsWzEwXSksXHJcbiAgICAgIGJ1YmJsZUNvbG9yOiBTdHJpbmcocGFuZWxbMTFdKSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJlbmRlckZvdXJ0aFNsaWRlcihpZDogc3RyaW5nLCBwYW5lbDogKG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmcpW10pIHtcclxuICAgIC8vIHJlbmRlciBzbGlkZXIgd2l0aCBpbmZvIGZyb20gcGFuZWxcclxuICAgIC8vIGRlbGV0ZSBkdXBsaWNhdGVzIG9mIHNsaWRlciB3aGVuIHBhbmVsIGlzIHVzZWRcclxuICAgIGNvbnN0IGVsZW0gPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xyXG4gICAgaWYgKGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQpIHtcclxuICAgICAgZWxlbS5yZW1vdmVDaGlsZChlbGVtLmZpcnN0RWxlbWVudENoaWxkKTtcclxuICAgIH1cclxuICAgICQoJyNhcGlfZm91cnRoJykuc2xpZGVyUGx1Z2luKHtcclxuICAgICAgbWF4OiBOdW1iZXIocGFuZWxbMF0pLFxyXG4gICAgICBtaW46IE51bWJlcihwYW5lbFsxXSksXHJcbiAgICAgIHN0ZXA6IE51bWJlcihwYW5lbFsyXSksXHJcbiAgICAgIGRlZmF1bHRWYWx1ZTogTnVtYmVyKHBhbmVsWzNdKSxcclxuICAgICAgdmFsdWVTZWNvbmQ6IE51bWJlcihwYW5lbFs0XSksXHJcbiAgICAgIGlzTXVsdGlUaHVtYjogQm9vbGVhbihwYW5lbFs1XSksXHJcbiAgICAgIHNob3dCdWJibGU6IEJvb2xlYW4ocGFuZWxbNl0pLFxyXG4gICAgICBpc1ZlcnRpY2FsOiBCb29sZWFuKHBhbmVsWzddKSxcclxuICAgICAgc2hvd1RpY2tzOiBCb29sZWFuKHBhbmVsWzhdKSxcclxuICAgICAgYmFyQ29sb3I6IFN0cmluZyhwYW5lbFs5XSksXHJcbiAgICAgIHRodW1iQ29sb3I6IFN0cmluZyhwYW5lbFsxMF0pLFxyXG4gICAgICBidWJibGVDb2xvcjogU3RyaW5nKHBhbmVsWzExXSksXHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuY29uc3QgdGVzdCA9IG5ldyBDYWxsUGx1Z2luKCk7XHJcbmV4cG9ydCBkZWZhdWx0IHRlc3Q7IiwiaW1wb3J0IHRlc3QgZnJvbSAnLi9jYWxsUGx1Z2luJztcbmltcG9ydCAnLi9qcXVlcnkuaW5kZXgnO1xuXG5jbGFzcyBQYW5lbCB7XG4gIHN0YXRlRm9yRmlyc3RBcGk6IChudW1iZXIgfCBib29sZWFuIHwgc3RyaW5nKVtdID0gW107XG5cbiAgc3RhdGVGb3JTZWNvbmRBcGk6IChudW1iZXIgfCBib29sZWFuIHwgc3RyaW5nKVtdID0gW107XG5cbiAgc3RhdGVGb3JUaGlyZEFwaTogKG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmcpW10gPSBbXTtcblxuICBzdGF0ZUZvckZvdXJ0aEFwaTogKG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmcpW10gPSBbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmluaXQoKTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5jYWxsRmlyc3RBcGkoKTtcbiAgICB0aGlzLmNhbGxTZWNvbmRBcGkoKTtcbiAgICB0aGlzLmNhbGxUaGlyZEFwaSgpO1xuICAgIHRoaXMuY2FsbEZvdXJ0aEFwaSgpO1xuICB9XG5cbiAgc2V0U3RhdGUob3B0aW9uczogKG51bWJlciB8IGJvb2xlYW4gfCBzdHJpbmcpW10pOiB2b2lkIHtcbiAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGkgPSBvcHRpb25zO1xuICAgIHRoaXMuc3RhdGVGb3JTZWNvbmRBcGkgPSBvcHRpb25zO1xuICAgIHRoaXMuc3RhdGVGb3JUaGlyZEFwaSA9IG9wdGlvbnM7XG4gICAgdGhpcy5zdGF0ZUZvckZvdXJ0aEFwaSA9IG9wdGlvbnM7XG4gIH1cblxuICBjYWxsRmlyc3RBcGkoKSB7XG4gICAgdGhpcy5nZXREYXRhRnJvbVBhbmVsKCk7XG4gICAgdGhpcy5nZXREYXRhRnJvbVN0YXRlKCk7XG4gIH1cblxuICBjYWxsU2Vjb25kQXBpKCkge1xuICAgIHRoaXMuZ2V0RGF0YUZyb21TZWNvbmRQYW5lbCgpO1xuICAgIHRoaXMuZ2V0RGF0YUZyb21TZWNvbmRTdGF0ZSgpO1xuICB9XG5cbiAgY2FsbFRoaXJkQXBpKCkge1xuICAgIHRoaXMuZ2V0RGF0YUZyb21UaGlyZFBhbmVsKCk7XG4gICAgdGhpcy5nZXREYXRhRnJvbVRoaXJkU3RhdGUoKTtcbiAgfVxuXG4gIGNhbGxGb3VydGhBcGkoKSB7XG4gICAgdGhpcy5nZXREYXRhRnJvbUZvdXJ0aFBhbmVsKCk7XG4gICAgdGhpcy5nZXREYXRhRnJvbUZvdXJ0aFN0YXRlKCk7XG4gIH1cblxuICAvLyBGSVJTVCBQQU5FTCBBTkQgQVBJXG4gIC8vIHN0YXRlIGdldHMgZGF0YSBmcm9tIHBhbmVsXG4gIGdldERhdGFGcm9tUGFuZWwoKSB7XG4gICAgLy8gZ2V0IHZhbHVlcyBmcm9tIHBhbmVsXG4gICAgY29uc3QgZ2V0VmFsdWUgPSAoaWQ6IHN0cmluZyk6IG51bWJlciA9PiB7XG4gICAgICBjb25zdCBlbGVtID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgcmV0dXJuIE51bWJlcihlbGVtLnZhbHVlKTtcbiAgICB9O1xuICAgIGNvbnN0IGdldEJvb2xlYW5WYWx1ZSA9IChpZDogc3RyaW5nKTogYm9vbGVhbiA9PiB7XG4gICAgICBjb25zdCBlbGVtID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgcmV0dXJuIEJvb2xlYW4oZWxlbS5jaGVja2VkKTtcbiAgICB9O1xuICAgIGNvbnN0IGdldFN0cmluZ1ZhbHVlID0gKGlkOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgICAgY29uc3QgZWxlbSA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgICAgIHJldHVybiBTdHJpbmcoZWxlbS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHRoaXMuc2V0U3RhdGUoW1xuICAgICAgZ2V0VmFsdWUoJ21heDEnKSxcbiAgICAgIGdldFZhbHVlKCdtaW4xJyksXG4gICAgICBnZXRWYWx1ZSgnc3RlcDEnKSxcbiAgICAgIGdldFZhbHVlKCdkZWZhdWx0VmFsdWUxJyksXG4gICAgICBnZXRWYWx1ZSgndmFsdWVTZWNvbmQxJyksXG4gICAgICBnZXRCb29sZWFuVmFsdWUoJ2lzTXVsdGlUaHVtYjEnKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnc2hvd0J1YmJsZTEnKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnaXNWZXJ0aWNhbDEnKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnc2hvd1RpY2tzMScpLFxuICAgICAgZ2V0U3RyaW5nVmFsdWUoJ2JhckNvbG9yMScpLFxuICAgICAgZ2V0U3RyaW5nVmFsdWUoJ3RodW1iQ29sb3IxJyksXG4gICAgICBnZXRTdHJpbmdWYWx1ZSgnYnViYmxlQ29sb3IxJyksXG4gICAgXSk7XG4gIH1cbiAgXG4gIC8vIHdoZW4gc2xpZGVyIGNoYW5nZXMgZGVmYXVsdCBhbmQgc2Vjb25kIHZhbHVlcywgcGFuZWwgc2hvd3MgY2hhbmdlc1xuICBzcHlPblNsaWRlcihpdGVtOiBzdHJpbmcpIHtcbiAgICBjb25zdCBzbGlkZXIgPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaXRlbSk/LmZpcnN0Q2hpbGQ7XG4gICAgY29uc3Qgc2V0U2xpZGVyVmFsdWUgPSAoKSA9PiB7XG4gICAgICBjb25zdCBuZXdEZWZhdWx0VmFsdWUgPSBzbGlkZXIuZ2V0QXR0cmlidXRlKCdkZWZhdWx0LXZhbHVlJyk7XG4gICAgICBpZiAobmV3RGVmYXVsdFZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVmYXVsdFZhbHVlMScpO1xuICAgICAgICBlbGVtZW50LnZhbHVlID0gbmV3RGVmYXVsdFZhbHVlO1xuICAgICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbM10gPSBOdW1iZXIobmV3RGVmYXVsdFZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG5ld0RlZmF1bHRMZWZ0VmFsdWUgPSBzbGlkZXIuZ2V0QXR0cmlidXRlKCdmaXJzdC12YWx1ZScpO1xuICAgICAgaWYgKG5ld0RlZmF1bHRMZWZ0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWUxJyk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBuZXdEZWZhdWx0TGVmdFZhbHVlO1xuICAgICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbM10gPSBOdW1iZXIobmV3RGVmYXVsdExlZnRWYWx1ZSk7XG4gICAgICB9XG4gICAgICBjb25zdCBuZXdSaWdodFZhbHVlID0gc2xpZGVyLmdldEF0dHJpYnV0ZSgnc2Vjb25kLXZhbHVlJyk7XG4gICAgICBpZiAobmV3UmlnaHRWYWx1ZSkge1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZhbHVlU2Vjb25kMScpO1xuICAgICAgICBlbGVtZW50LnZhbHVlID0gbmV3UmlnaHRWYWx1ZTtcbiAgICAgICAgdGhpcy5zdGF0ZUZvckZpcnN0QXBpWzRdID0gTnVtYmVyKG5ld1JpZ2h0VmFsdWUpO1xuICAgICAgfVxuICAgIH07XG4gICAgc2xpZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHNldFNsaWRlclZhbHVlKTtcbiAgICBzbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZXRTbGlkZXJWYWx1ZSk7XG4gIH1cblxuICAvLyBzbGlkZXIgZ2V0cyBkYXRhIGZyb20gc3RhdGVcbiAgZ2V0RGF0YUZyb21TdGF0ZSgpIHtcbiAgICBjb25zdCBtYXhFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21heDEnKTtcbiAgICBjb25zdCBtaW5FbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21pbjEnKTtcbiAgICBjb25zdCBzdGVwRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGVwMScpO1xuICAgIGNvbnN0IGRlZmF1bHRWYWx1ZUVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVmYXVsdFZhbHVlMScpO1xuICAgIGNvbnN0IHZhbHVlU2Vjb25kRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2YWx1ZVNlY29uZDEnKTtcbiAgICAvLyBjaGFuZ2UgbnVtYmVyIHZhbHVlXG4gICAgY29uc3QgY2hhbmdlTnVtYmVyVmFsdWUgPSAoKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbMF0gPSBOdW1iZXIobWF4RWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbMV0gPSBOdW1iZXIobWluRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbMl0gPSBOdW1iZXIoc3RlcEVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvckZpcnN0QXBpWzNdID0gTnVtYmVyKGRlZmF1bHRWYWx1ZUVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvckZpcnN0QXBpWzRdID0gTnVtYmVyKHZhbHVlU2Vjb25kRWxlbWVudC52YWx1ZSk7XG4gICAgICB0ZXN0LnJlbmRlckZpcnN0U2xpZGVyKCdhcGlfZmlyc3QnLCB0aGlzLnN0YXRlRm9yRmlyc3RBcGkpO1xuICAgICAgdGhpcy5zcHlPblNsaWRlcignYXBpX2ZpcnN0Jyk7XG4gICAgfTtcbiAgICBtYXhFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICBtaW5FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICBzdGVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VOdW1iZXJWYWx1ZSk7XG4gICAgZGVmYXVsdFZhbHVlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VOdW1iZXJWYWx1ZSk7XG4gICAgdmFsdWVTZWNvbmRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcblxuICAgIC8vIGNoYW5nZSBib29sZWFuIGRhdGFcbiAgICBjb25zdCBtdWx0aUVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaXNNdWx0aVRodW1iMScpO1xuICAgIGNvbnN0IGJ1YmJsZUVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2hvd0J1YmJsZTEnKTtcbiAgICBjb25zdCBpc1ZlcnRpY2FsRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpc1ZlcnRpY2FsMScpO1xuICAgIGNvbnN0IHRpY2tzRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaG93VGlja3MxJyk7XG4gICAgY29uc3QgY2hhbmdlQm9vbGVhblZhbHVlID0gKCkgPT4ge1xuICAgICAgdGhpcy5zdGF0ZUZvckZpcnN0QXBpWzVdID0gQm9vbGVhbihtdWx0aUVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbNl0gPSBCb29sZWFuKGJ1YmJsZUVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbN10gPSBCb29sZWFuKGlzVmVydGljYWxFbGVtZW50LmNoZWNrZWQpO1xuICAgICAgdGhpcy5zdGF0ZUZvckZpcnN0QXBpWzhdID0gQm9vbGVhbih0aWNrc0VsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0ZXN0LnJlbmRlckZpcnN0U2xpZGVyKCdhcGlfZmlyc3QnLCB0aGlzLnN0YXRlRm9yRmlyc3RBcGkpO1xuICAgICAgdGhpcy5zcHlPblNsaWRlcignYXBpX2ZpcnN0Jyk7XG4gICAgfTtcbiAgICBtdWx0aUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlQm9vbGVhblZhbHVlKTtcbiAgICBidWJibGVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUJvb2xlYW5WYWx1ZSk7XG4gICAgaXNWZXJ0aWNhbEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlQm9vbGVhblZhbHVlKTtcbiAgICB0aWNrc0VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlQm9vbGVhblZhbHVlKTtcblxuICAgIC8vIGNoYW5nZSBzdHJpbmcgZGF0YVxuICAgIGNvbnN0IGJhckNvbG9yRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYXJDb2xvcjEnKTtcbiAgICBjb25zdCB0aHVtYkNvbG9yRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aHVtYkNvbG9yMScpO1xuICAgIGNvbnN0IGJ1YmJsZUNvbG9yRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidWJibGVDb2xvcjEnKTtcbiAgICBjb25zdCBjaGFuZ2VTdHJpbmdWYWx1ZSA9ICgpID0+IHtcbiAgICAgIHRoaXMuc3RhdGVGb3JGaXJzdEFwaVs5XSA9IFN0cmluZyhiYXJDb2xvckVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvckZpcnN0QXBpWzEwXSA9IFN0cmluZyh0aHVtYkNvbG9yRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yRmlyc3RBcGlbMTFdID0gU3RyaW5nKGJ1YmJsZUNvbG9yRWxlbWVudC52YWx1ZSk7XG4gICAgICB0ZXN0LnJlbmRlckZpcnN0U2xpZGVyKCdhcGlfZmlyc3QnLCB0aGlzLnN0YXRlRm9yRmlyc3RBcGkpO1xuICAgICAgdGhpcy5zcHlPblNsaWRlcignYXBpX2ZpcnN0Jyk7XG4gICAgfTtcbiAgICBiYXJDb2xvckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlU3RyaW5nVmFsdWUpO1xuICAgIHRodW1iQ29sb3JFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZVN0cmluZ1ZhbHVlKTtcbiAgICBidWJibGVDb2xvckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlU3RyaW5nVmFsdWUpO1xuICAgIFxuICAgIC8vIHJlbmRlciBzbGlkZXIgd2l0aCBkYXRhIGZyb20gcGFuZWxcbiAgICB0ZXN0LnJlbmRlckZpcnN0U2xpZGVyKCdhcGlfZmlyc3QnLCB0aGlzLnN0YXRlRm9yRmlyc3RBcGkpO1xuICAgIHRoaXMuc3B5T25TbGlkZXIoJ2FwaV9maXJzdCcpO1xuICB9XG5cbiAgLy8gU0VDT05EIFBBTkVMIEFORCBBUElcbiAgLy8gc3RhdGUgZ2V0cyBkYXRhIGZyb20gcGFuZWxcbiAgZ2V0RGF0YUZyb21TZWNvbmRQYW5lbCgpIHtcbiAgICAvLyBnZXQgdmFsdWVzIGZyb20gcGFuZWxcbiAgICBjb25zdCBnZXRWYWx1ZSA9IChpZDogc3RyaW5nKTogbnVtYmVyID0+IHtcbiAgICAgIGNvbnN0IGVsZW0gPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICByZXR1cm4gTnVtYmVyKGVsZW0udmFsdWUpO1xuICAgIH07XG4gICAgY29uc3QgZ2V0Qm9vbGVhblZhbHVlID0gKGlkOiBzdHJpbmcpOiBib29sZWFuID0+IHtcbiAgICAgIGNvbnN0IGVsZW0gPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICByZXR1cm4gQm9vbGVhbihlbGVtLmNoZWNrZWQpO1xuICAgIH07XG4gICAgY29uc3QgZ2V0U3RyaW5nVmFsdWUgPSAoaWQ6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gICAgICBjb25zdCBlbGVtID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgcmV0dXJuIFN0cmluZyhlbGVtLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgdGhpcy5zZXRTdGF0ZShbXG4gICAgICBnZXRWYWx1ZSgnbWF4MicpLFxuICAgICAgZ2V0VmFsdWUoJ21pbjInKSxcbiAgICAgIGdldFZhbHVlKCdzdGVwMicpLFxuICAgICAgZ2V0VmFsdWUoJ2RlZmF1bHRWYWx1ZTInKSxcbiAgICAgIGdldFZhbHVlKCd2YWx1ZVNlY29uZDInKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnaXNNdWx0aVRodW1iMicpLFxuICAgICAgZ2V0Qm9vbGVhblZhbHVlKCdzaG93QnViYmxlMicpLFxuICAgICAgZ2V0Qm9vbGVhblZhbHVlKCdpc1ZlcnRpY2FsMicpLFxuICAgICAgZ2V0Qm9vbGVhblZhbHVlKCdzaG93VGlja3MyJyksXG4gICAgICBnZXRTdHJpbmdWYWx1ZSgnYmFyQ29sb3IyJyksXG4gICAgICBnZXRTdHJpbmdWYWx1ZSgndGh1bWJDb2xvcjInKSxcbiAgICAgIGdldFN0cmluZ1ZhbHVlKCdidWJibGVDb2xvcjInKSxcbiAgICBdKTtcbiAgfVxuICBcbiAgLy8gd2hlbiBzbGlkZXIgY2hhbmdlcyBkZWZhdWx0IGFuZCBzZWNvbmQgdmFsdWVzLCBwYW5lbCBzaG93cyBjaGFuZ2VzXG4gIHNweU9uU2Vjb25kU2xpZGVyKGl0ZW06IHN0cmluZykge1xuICAgIGNvbnN0IHNsaWRlciA9IDxIVE1MRGl2RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpdGVtKT8uZmlyc3RDaGlsZDtcbiAgICBjb25zdCBzZXRTbGlkZXJWYWx1ZSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG5ld0RlZmF1bHRWYWx1ZSA9IHNsaWRlci5nZXRBdHRyaWJ1dGUoJ2RlZmF1bHQtdmFsdWUnKTtcbiAgICAgIGlmIChuZXdEZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWUyJyk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBuZXdEZWZhdWx0VmFsdWU7XG4gICAgICAgIHRoaXMuc3RhdGVGb3JTZWNvbmRBcGlbM10gPSBOdW1iZXIobmV3RGVmYXVsdFZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG5ld0RlZmF1bHRMZWZ0VmFsdWUgPSBzbGlkZXIuZ2V0QXR0cmlidXRlKCdmaXJzdC12YWx1ZScpO1xuICAgICAgaWYgKG5ld0RlZmF1bHRMZWZ0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWUyJyk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBuZXdEZWZhdWx0TGVmdFZhbHVlO1xuICAgICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzNdID0gTnVtYmVyKG5ld0RlZmF1bHRMZWZ0VmFsdWUpO1xuICAgICAgfVxuICAgICAgY29uc3QgbmV3UmlnaHRWYWx1ZSA9IHNsaWRlci5nZXRBdHRyaWJ1dGUoJ3NlY29uZC12YWx1ZScpO1xuICAgICAgaWYgKG5ld1JpZ2h0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2YWx1ZVNlY29uZDInKTtcbiAgICAgICAgZWxlbWVudC52YWx1ZSA9IG5ld1JpZ2h0VmFsdWU7XG4gICAgICAgIHRoaXMuc3RhdGVGb3JTZWNvbmRBcGlbNF0gPSBOdW1iZXIobmV3UmlnaHRWYWx1ZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBzbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc2V0U2xpZGVyVmFsdWUpO1xuICAgIHNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNldFNsaWRlclZhbHVlKTtcbiAgfVxuXG4gIC8vIHNsaWRlciBnZXRzIGRhdGEgZnJvbSBzdGF0ZVxuICBnZXREYXRhRnJvbVNlY29uZFN0YXRlKCkge1xuICAgIGNvbnN0IG1heEVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWF4MicpO1xuICAgIGNvbnN0IG1pbkVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWluMicpO1xuICAgIGNvbnN0IHN0ZXBFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0ZXAyJyk7XG4gICAgY29uc3QgZGVmYXVsdFZhbHVlRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWUyJyk7XG4gICAgY29uc3QgdmFsdWVTZWNvbmRFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZhbHVlU2Vjb25kMicpO1xuICAgIC8vIGNoYW5nZSBudW1iZXIgdmFsdWVcbiAgICBjb25zdCBjaGFuZ2VOdW1iZXJWYWx1ZSA9ICgpID0+IHtcbiAgICAgIHRoaXMuc3RhdGVGb3JTZWNvbmRBcGlbMF0gPSBOdW1iZXIobWF4RWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzFdID0gTnVtYmVyKG1pbkVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvclNlY29uZEFwaVsyXSA9IE51bWJlcihzdGVwRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzNdID0gTnVtYmVyKGRlZmF1bHRWYWx1ZUVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvclNlY29uZEFwaVs0XSA9IE51bWJlcih2YWx1ZVNlY29uZEVsZW1lbnQudmFsdWUpO1xuICAgICAgdGVzdC5yZW5kZXJTZWNvbmRTbGlkZXIoJ2FwaV9zZWNvbmQnLCB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpKTtcbiAgICAgIHRoaXMuc3B5T25TZWNvbmRTbGlkZXIoJ2FwaV9zZWNvbmQnKTtcbiAgICB9O1xuICAgIG1heEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlTnVtYmVyVmFsdWUpO1xuICAgIG1pbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlTnVtYmVyVmFsdWUpO1xuICAgIHN0ZXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICBkZWZhdWx0VmFsdWVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICB2YWx1ZVNlY29uZEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlTnVtYmVyVmFsdWUpO1xuXG4gICAgLy8gY2hhbmdlIGJvb2xlYW4gZGF0YVxuICAgIGNvbnN0IG11bHRpRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpc011bHRpVGh1bWIyJyk7XG4gICAgY29uc3QgYnViYmxlRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaG93QnViYmxlMicpO1xuICAgIGNvbnN0IGlzVmVydGljYWxFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lzVmVydGljYWwyJyk7XG4gICAgY29uc3QgdGlja3NFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nob3dUaWNrczInKTtcbiAgICBjb25zdCBjaGFuZ2VCb29sZWFuVmFsdWUgPSAoKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzVdID0gQm9vbGVhbihtdWx0aUVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzZdID0gQm9vbGVhbihidWJibGVFbGVtZW50LmNoZWNrZWQpO1xuICAgICAgdGhpcy5zdGF0ZUZvclNlY29uZEFwaVs3XSA9IEJvb2xlYW4oaXNWZXJ0aWNhbEVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzhdID0gQm9vbGVhbih0aWNrc0VsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0ZXN0LnJlbmRlclNlY29uZFNsaWRlcignYXBpX3NlY29uZCcsIHRoaXMuc3RhdGVGb3JTZWNvbmRBcGkpO1xuICAgICAgdGhpcy5zcHlPblNlY29uZFNsaWRlcignYXBpX3NlY29uZCcpO1xuICAgIH07XG4gICAgbXVsdGlFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUJvb2xlYW5WYWx1ZSk7XG4gICAgYnViYmxlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VCb29sZWFuVmFsdWUpO1xuICAgIGlzVmVydGljYWxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUJvb2xlYW5WYWx1ZSk7XG4gICAgdGlja3NFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUJvb2xlYW5WYWx1ZSk7XG5cbiAgICAvLyBjaGFuZ2Ugc3RyaW5nIGRhdGFcbiAgICBjb25zdCBiYXJDb2xvckVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFyQ29sb3IyJyk7XG4gICAgY29uc3QgdGh1bWJDb2xvckVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGh1bWJDb2xvcjInKTtcbiAgICBjb25zdCBidWJibGVDb2xvckVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnViYmxlQ29sb3IyJyk7XG4gICAgY29uc3QgY2hhbmdlU3RyaW5nVmFsdWUgPSAoKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzldID0gU3RyaW5nKGJhckNvbG9yRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzEwXSA9IFN0cmluZyh0aHVtYkNvbG9yRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpWzExXSA9IFN0cmluZyhidWJibGVDb2xvckVsZW1lbnQudmFsdWUpO1xuICAgICAgdGVzdC5yZW5kZXJTZWNvbmRTbGlkZXIoJ2FwaV9zZWNvbmQnLCB0aGlzLnN0YXRlRm9yU2Vjb25kQXBpKTtcbiAgICAgIHRoaXMuc3B5T25TZWNvbmRTbGlkZXIoJ2FwaV9zZWNvbmQnKTtcbiAgICB9O1xuICAgIGJhckNvbG9yRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VTdHJpbmdWYWx1ZSk7XG4gICAgdGh1bWJDb2xvckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlU3RyaW5nVmFsdWUpO1xuICAgIGJ1YmJsZUNvbG9yRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VTdHJpbmdWYWx1ZSk7XG4gICAgXG4gICAgLy8gcmVuZGVyIHNsaWRlciB3aXRoIGRhdGEgZnJvbSBwYW5lbFxuICAgIHRlc3QucmVuZGVyU2Vjb25kU2xpZGVyKCdhcGlfc2Vjb25kJywgdGhpcy5zdGF0ZUZvclNlY29uZEFwaSk7XG4gICAgdGhpcy5zcHlPblNlY29uZFNsaWRlcignYXBpX3NlY29uZCcpO1xuICB9XG5cbiAgLy8gVEhJUkQgUEFORUwgQU5EIEFQSVxuICAvLyBzdGF0ZSBnZXRzIGRhdGEgZnJvbSBwYW5lbFxuICBnZXREYXRhRnJvbVRoaXJkUGFuZWwoKSB7XG4gICAgLy8gZ2V0IHZhbHVlcyBmcm9tIHBhbmVsXG4gICAgY29uc3QgZ2V0VmFsdWUgPSAoaWQ6IHN0cmluZyk6IG51bWJlciA9PiB7XG4gICAgICBjb25zdCBlbGVtID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgcmV0dXJuIE51bWJlcihlbGVtLnZhbHVlKTtcbiAgICB9O1xuICAgIGNvbnN0IGdldEJvb2xlYW5WYWx1ZSA9IChpZDogc3RyaW5nKTogYm9vbGVhbiA9PiB7XG4gICAgICBjb25zdCBlbGVtID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgcmV0dXJuIEJvb2xlYW4oZWxlbS5jaGVja2VkKTtcbiAgICB9O1xuICAgIGNvbnN0IGdldFN0cmluZ1ZhbHVlID0gKGlkOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgICAgY29uc3QgZWxlbSA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgICAgIHJldHVybiBTdHJpbmcoZWxlbS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHRoaXMuc2V0U3RhdGUoW1xuICAgICAgZ2V0VmFsdWUoJ21heDMnKSxcbiAgICAgIGdldFZhbHVlKCdtaW4zJyksXG4gICAgICBnZXRWYWx1ZSgnc3RlcDMnKSxcbiAgICAgIGdldFZhbHVlKCdkZWZhdWx0VmFsdWUzJyksXG4gICAgICBnZXRWYWx1ZSgndmFsdWVTZWNvbmQzJyksXG4gICAgICBnZXRCb29sZWFuVmFsdWUoJ2lzTXVsdGlUaHVtYjMnKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnc2hvd0J1YmJsZTMnKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnaXNWZXJ0aWNhbDMnKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnc2hvd1RpY2tzMycpLFxuICAgICAgZ2V0U3RyaW5nVmFsdWUoJ2JhckNvbG9yMycpLFxuICAgICAgZ2V0U3RyaW5nVmFsdWUoJ3RodW1iQ29sb3IzJyksXG4gICAgICBnZXRTdHJpbmdWYWx1ZSgnYnViYmxlQ29sb3IzJyksXG4gICAgXSk7XG4gIH1cbiAgXG4gIC8vIHdoZW4gc2xpZGVyIGNoYW5nZXMgZGVmYXVsdCBhbmQgc2Vjb25kIHZhbHVlcywgcGFuZWwgc2hvd3MgY2hhbmdlc1xuICBzcHlPblRoaXJkU2xpZGVyKGl0ZW06IHN0cmluZykge1xuICAgIGNvbnN0IHNsaWRlciA9IDxIVE1MRGl2RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpdGVtKT8uZmlyc3RDaGlsZDtcbiAgICBjb25zdCBzZXRTbGlkZXJWYWx1ZSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG5ld0RlZmF1bHRWYWx1ZSA9IHNsaWRlci5nZXRBdHRyaWJ1dGUoJ2RlZmF1bHQtdmFsdWUnKTtcbiAgICAgIGlmIChuZXdEZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWUzJyk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBuZXdEZWZhdWx0VmFsdWU7XG4gICAgICAgIHRoaXMuc3RhdGVGb3JUaGlyZEFwaVszXSA9IE51bWJlcihuZXdEZWZhdWx0VmFsdWUpO1xuICAgICAgfVxuICAgICAgY29uc3QgbmV3RGVmYXVsdExlZnRWYWx1ZSA9IHNsaWRlci5nZXRBdHRyaWJ1dGUoJ2ZpcnN0LXZhbHVlJyk7XG4gICAgICBpZiAobmV3RGVmYXVsdExlZnRWYWx1ZSkge1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RlZmF1bHRWYWx1ZTMnKTtcbiAgICAgICAgZWxlbWVudC52YWx1ZSA9IG5ld0RlZmF1bHRMZWZ0VmFsdWU7XG4gICAgICAgIHRoaXMuc3RhdGVGb3JUaGlyZEFwaVszXSA9IE51bWJlcihuZXdEZWZhdWx0TGVmdFZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG5ld1JpZ2h0VmFsdWUgPSBzbGlkZXIuZ2V0QXR0cmlidXRlKCdzZWNvbmQtdmFsdWUnKTtcbiAgICAgIGlmIChuZXdSaWdodFZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmFsdWVTZWNvbmQzJyk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBuZXdSaWdodFZhbHVlO1xuICAgICAgICB0aGlzLnN0YXRlRm9yVGhpcmRBcGlbNF0gPSBOdW1iZXIobmV3UmlnaHRWYWx1ZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBzbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc2V0U2xpZGVyVmFsdWUpO1xuICAgIHNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNldFNsaWRlclZhbHVlKTtcbiAgfVxuXG4gIC8vIHNsaWRlciBnZXRzIGRhdGEgZnJvbSBzdGF0ZVxuICBnZXREYXRhRnJvbVRoaXJkU3RhdGUoKSB7XG4gICAgY29uc3QgbWF4RWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXgzJyk7XG4gICAgY29uc3QgbWluRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtaW4zJyk7XG4gICAgY29uc3Qgc3RlcEVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RlcDMnKTtcbiAgICBjb25zdCBkZWZhdWx0VmFsdWVFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RlZmF1bHRWYWx1ZTMnKTtcbiAgICBjb25zdCB2YWx1ZVNlY29uZEVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmFsdWVTZWNvbmQzJyk7XG4gICAgLy8gY2hhbmdlIG51bWJlciB2YWx1ZVxuICAgIGNvbnN0IGNoYW5nZU51bWJlclZhbHVlID0gKCkgPT4ge1xuICAgICAgdGhpcy5zdGF0ZUZvclRoaXJkQXBpWzBdID0gTnVtYmVyKG1heEVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvclRoaXJkQXBpWzFdID0gTnVtYmVyKG1pbkVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvclRoaXJkQXBpWzJdID0gTnVtYmVyKHN0ZXBFbGVtZW50LnZhbHVlKTtcbiAgICAgIHRoaXMuc3RhdGVGb3JUaGlyZEFwaVszXSA9IE51bWJlcihkZWZhdWx0VmFsdWVFbGVtZW50LnZhbHVlKTtcbiAgICAgIHRoaXMuc3RhdGVGb3JUaGlyZEFwaVs0XSA9IE51bWJlcih2YWx1ZVNlY29uZEVsZW1lbnQudmFsdWUpO1xuICAgICAgdGVzdC5yZW5kZXJUaGlyZFNsaWRlcignYXBpX3RoaXJkJywgdGhpcy5zdGF0ZUZvclRoaXJkQXBpKTtcbiAgICAgIHRoaXMuc3B5T25UaGlyZFNsaWRlcignYXBpX3RoaXJkJyk7XG4gICAgfTtcbiAgICBtYXhFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICBtaW5FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICBzdGVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VOdW1iZXJWYWx1ZSk7XG4gICAgZGVmYXVsdFZhbHVlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VOdW1iZXJWYWx1ZSk7XG4gICAgdmFsdWVTZWNvbmRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcblxuICAgIC8vIGNoYW5nZSBib29sZWFuIGRhdGFcbiAgICBjb25zdCBtdWx0aUVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaXNNdWx0aVRodW1iMycpO1xuICAgIGNvbnN0IGJ1YmJsZUVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2hvd0J1YmJsZTMnKTtcbiAgICBjb25zdCBpc1ZlcnRpY2FsRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpc1ZlcnRpY2FsMycpO1xuICAgIGNvbnN0IHRpY2tzRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaG93VGlja3MzJyk7XG4gICAgY29uc3QgY2hhbmdlQm9vbGVhblZhbHVlID0gKCkgPT4ge1xuICAgICAgdGhpcy5zdGF0ZUZvclRoaXJkQXBpWzVdID0gQm9vbGVhbihtdWx0aUVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yVGhpcmRBcGlbNl0gPSBCb29sZWFuKGJ1YmJsZUVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yVGhpcmRBcGlbN10gPSBCb29sZWFuKGlzVmVydGljYWxFbGVtZW50LmNoZWNrZWQpO1xuICAgICAgdGhpcy5zdGF0ZUZvclRoaXJkQXBpWzhdID0gQm9vbGVhbih0aWNrc0VsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0ZXN0LnJlbmRlclRoaXJkU2xpZGVyKCdhcGlfdGhpcmQnLCB0aGlzLnN0YXRlRm9yVGhpcmRBcGkpO1xuICAgICAgdGhpcy5zcHlPblRoaXJkU2xpZGVyKCdhcGlfdGhpcmQnKTtcbiAgICB9O1xuICAgIG11bHRpRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VCb29sZWFuVmFsdWUpO1xuICAgIGJ1YmJsZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlQm9vbGVhblZhbHVlKTtcbiAgICBpc1ZlcnRpY2FsRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VCb29sZWFuVmFsdWUpO1xuICAgIHRpY2tzRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VCb29sZWFuVmFsdWUpO1xuXG4gICAgLy8gY2hhbmdlIHN0cmluZyBkYXRhXG4gICAgY29uc3QgYmFyQ29sb3JFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JhckNvbG9yMycpO1xuICAgIGNvbnN0IHRodW1iQ29sb3JFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RodW1iQ29sb3IzJyk7XG4gICAgY29uc3QgYnViYmxlQ29sb3JFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J1YmJsZUNvbG9yMycpO1xuICAgIGNvbnN0IGNoYW5nZVN0cmluZ1ZhbHVlID0gKCkgPT4ge1xuICAgICAgdGhpcy5zdGF0ZUZvclRoaXJkQXBpWzldID0gU3RyaW5nKGJhckNvbG9yRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yVGhpcmRBcGlbMTBdID0gU3RyaW5nKHRodW1iQ29sb3JFbGVtZW50LnZhbHVlKTtcbiAgICAgIHRoaXMuc3RhdGVGb3JUaGlyZEFwaVsxMV0gPSBTdHJpbmcoYnViYmxlQ29sb3JFbGVtZW50LnZhbHVlKTtcbiAgICAgIHRlc3QucmVuZGVyVGhpcmRTbGlkZXIoJ2FwaV90aGlyZCcsIHRoaXMuc3RhdGVGb3JUaGlyZEFwaSk7XG4gICAgICB0aGlzLnNweU9uVGhpcmRTbGlkZXIoJ2FwaV90aGlyZCcpO1xuICAgIH07XG4gICAgYmFyQ29sb3JFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZVN0cmluZ1ZhbHVlKTtcbiAgICB0aHVtYkNvbG9yRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VTdHJpbmdWYWx1ZSk7XG4gICAgYnViYmxlQ29sb3JFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZVN0cmluZ1ZhbHVlKTtcbiAgICBcbiAgICAvLyByZW5kZXIgc2xpZGVyIHdpdGggZGF0YSBmcm9tIHBhbmVsXG4gICAgdGVzdC5yZW5kZXJUaGlyZFNsaWRlcignYXBpX3RoaXJkJywgdGhpcy5zdGF0ZUZvclRoaXJkQXBpKTtcbiAgICB0aGlzLnNweU9uVGhpcmRTbGlkZXIoJ2FwaV90aGlyZCcpO1xuICB9XG5cbiAgLy8gRk9VUlRIIFBBTkVMIEFORCBBUElcbiAgLy8gc3RhdGUgZ2V0cyBkYXRhIGZyb20gcGFuZWxcbiAgZ2V0RGF0YUZyb21Gb3VydGhQYW5lbCgpIHtcbiAgICAvLyBnZXQgdmFsdWVzIGZyb20gcGFuZWxcbiAgICBjb25zdCBnZXRWYWx1ZSA9IChpZDogc3RyaW5nKTogbnVtYmVyID0+IHtcbiAgICAgIGNvbnN0IGVsZW0gPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICByZXR1cm4gTnVtYmVyKGVsZW0udmFsdWUpO1xuICAgIH07XG4gICAgY29uc3QgZ2V0Qm9vbGVhblZhbHVlID0gKGlkOiBzdHJpbmcpOiBib29sZWFuID0+IHtcbiAgICAgIGNvbnN0IGVsZW0gPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICByZXR1cm4gQm9vbGVhbihlbGVtLmNoZWNrZWQpO1xuICAgIH07XG4gICAgY29uc3QgZ2V0U3RyaW5nVmFsdWUgPSAoaWQ6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gICAgICBjb25zdCBlbGVtID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICAgICAgcmV0dXJuIFN0cmluZyhlbGVtLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgdGhpcy5zZXRTdGF0ZShbXG4gICAgICBnZXRWYWx1ZSgnbWF4NCcpLFxuICAgICAgZ2V0VmFsdWUoJ21pbjQnKSxcbiAgICAgIGdldFZhbHVlKCdzdGVwNCcpLFxuICAgICAgZ2V0VmFsdWUoJ2RlZmF1bHRWYWx1ZTQnKSxcbiAgICAgIGdldFZhbHVlKCd2YWx1ZVNlY29uZDQnKSxcbiAgICAgIGdldEJvb2xlYW5WYWx1ZSgnaXNNdWx0aVRodW1iNCcpLFxuICAgICAgZ2V0Qm9vbGVhblZhbHVlKCdzaG93QnViYmxlNCcpLFxuICAgICAgZ2V0Qm9vbGVhblZhbHVlKCdpc1ZlcnRpY2FsNCcpLFxuICAgICAgZ2V0Qm9vbGVhblZhbHVlKCdzaG93VGlja3M0JyksXG4gICAgICBnZXRTdHJpbmdWYWx1ZSgnYmFyQ29sb3I0JyksXG4gICAgICBnZXRTdHJpbmdWYWx1ZSgndGh1bWJDb2xvcjQnKSxcbiAgICAgIGdldFN0cmluZ1ZhbHVlKCdidWJibGVDb2xvcjQnKSxcbiAgICBdKTtcbiAgfVxuICBcbiAgLy8gd2hlbiBzbGlkZXIgY2hhbmdlcyBkZWZhdWx0IGFuZCBzZWNvbmQgdmFsdWVzLCBwYW5lbCBzaG93cyBjaGFuZ2VzXG4gIHNweU9uRm91cnRoU2xpZGVyKGl0ZW06IHN0cmluZykge1xuICAgIGNvbnN0IHNsaWRlciA9IDxIVE1MRGl2RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChpdGVtKT8uZmlyc3RDaGlsZDtcbiAgICBjb25zdCBzZXRTbGlkZXJWYWx1ZSA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG5ld0RlZmF1bHRWYWx1ZSA9IHNsaWRlci5nZXRBdHRyaWJ1dGUoJ2RlZmF1bHQtdmFsdWUnKTtcbiAgICAgIGlmIChuZXdEZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWU0Jyk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBuZXdEZWZhdWx0VmFsdWU7XG4gICAgICAgIHRoaXMuc3RhdGVGb3JGb3VydGhBcGlbM10gPSBOdW1iZXIobmV3RGVmYXVsdFZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG5ld0RlZmF1bHRMZWZ0VmFsdWUgPSBzbGlkZXIuZ2V0QXR0cmlidXRlKCdmaXJzdC12YWx1ZScpO1xuICAgICAgaWYgKG5ld0RlZmF1bHRMZWZ0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWU0Jyk7XG4gICAgICAgIGVsZW1lbnQudmFsdWUgPSBuZXdEZWZhdWx0TGVmdFZhbHVlO1xuICAgICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzNdID0gTnVtYmVyKG5ld0RlZmF1bHRMZWZ0VmFsdWUpO1xuICAgICAgfVxuICAgICAgY29uc3QgbmV3UmlnaHRWYWx1ZSA9IHNsaWRlci5nZXRBdHRyaWJ1dGUoJ3NlY29uZC12YWx1ZScpO1xuICAgICAgaWYgKG5ld1JpZ2h0VmFsdWUpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2YWx1ZVNlY29uZDQnKTtcbiAgICAgICAgZWxlbWVudC52YWx1ZSA9IG5ld1JpZ2h0VmFsdWU7XG4gICAgICAgIHRoaXMuc3RhdGVGb3JGb3VydGhBcGlbNF0gPSBOdW1iZXIobmV3UmlnaHRWYWx1ZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBzbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc2V0U2xpZGVyVmFsdWUpO1xuICAgIHNsaWRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNldFNsaWRlclZhbHVlKTtcbiAgfVxuXG4gIC8vIHNsaWRlciBnZXRzIGRhdGEgZnJvbSBzdGF0ZVxuICBnZXREYXRhRnJvbUZvdXJ0aFN0YXRlKCkge1xuICAgIGNvbnN0IG1heEVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWF4NCcpO1xuICAgIGNvbnN0IG1pbkVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWluNCcpO1xuICAgIGNvbnN0IHN0ZXBFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0ZXA0Jyk7XG4gICAgY29uc3QgZGVmYXVsdFZhbHVlRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWZhdWx0VmFsdWU0Jyk7XG4gICAgY29uc3QgdmFsdWVTZWNvbmRFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZhbHVlU2Vjb25kNCcpO1xuICAgIC8vIGNoYW5nZSBudW1iZXIgdmFsdWVcbiAgICBjb25zdCBjaGFuZ2VOdW1iZXJWYWx1ZSA9ICgpID0+IHtcbiAgICAgIHRoaXMuc3RhdGVGb3JGb3VydGhBcGlbMF0gPSBOdW1iZXIobWF4RWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzFdID0gTnVtYmVyKG1pbkVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvckZvdXJ0aEFwaVsyXSA9IE51bWJlcihzdGVwRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzNdID0gTnVtYmVyKGRlZmF1bHRWYWx1ZUVsZW1lbnQudmFsdWUpO1xuICAgICAgdGhpcy5zdGF0ZUZvckZvdXJ0aEFwaVs0XSA9IE51bWJlcih2YWx1ZVNlY29uZEVsZW1lbnQudmFsdWUpO1xuICAgICAgdGVzdC5yZW5kZXJGb3VydGhTbGlkZXIoJ2FwaV9mb3VydGgnLCB0aGlzLnN0YXRlRm9yRm91cnRoQXBpKTtcbiAgICAgIHRoaXMuc3B5T25Gb3VydGhTbGlkZXIoJ2FwaV9mb3VydGgnKTtcbiAgICB9O1xuICAgIG1heEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlTnVtYmVyVmFsdWUpO1xuICAgIG1pbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlTnVtYmVyVmFsdWUpO1xuICAgIHN0ZXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICBkZWZhdWx0VmFsdWVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZU51bWJlclZhbHVlKTtcbiAgICB2YWx1ZVNlY29uZEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlTnVtYmVyVmFsdWUpO1xuXG4gICAgLy8gY2hhbmdlIGJvb2xlYW4gZGF0YVxuICAgIGNvbnN0IG11bHRpRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpc011bHRpVGh1bWI0Jyk7XG4gICAgY29uc3QgYnViYmxlRWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaG93QnViYmxlNCcpO1xuICAgIGNvbnN0IGlzVmVydGljYWxFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lzVmVydGljYWw0Jyk7XG4gICAgY29uc3QgdGlja3NFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nob3dUaWNrczQnKTtcbiAgICBjb25zdCBjaGFuZ2VCb29sZWFuVmFsdWUgPSAoKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzVdID0gQm9vbGVhbihtdWx0aUVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzZdID0gQm9vbGVhbihidWJibGVFbGVtZW50LmNoZWNrZWQpO1xuICAgICAgdGhpcy5zdGF0ZUZvckZvdXJ0aEFwaVs3XSA9IEJvb2xlYW4oaXNWZXJ0aWNhbEVsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzhdID0gQm9vbGVhbih0aWNrc0VsZW1lbnQuY2hlY2tlZCk7XG4gICAgICB0ZXN0LnJlbmRlckZvdXJ0aFNsaWRlcignYXBpX2ZvdXJ0aCcsIHRoaXMuc3RhdGVGb3JGb3VydGhBcGkpO1xuICAgICAgdGhpcy5zcHlPbkZvdXJ0aFNsaWRlcignYXBpX2ZvdXJ0aCcpO1xuICAgIH07XG4gICAgbXVsdGlFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUJvb2xlYW5WYWx1ZSk7XG4gICAgYnViYmxlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VCb29sZWFuVmFsdWUpO1xuICAgIGlzVmVydGljYWxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUJvb2xlYW5WYWx1ZSk7XG4gICAgdGlja3NFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGNoYW5nZUJvb2xlYW5WYWx1ZSk7XG5cbiAgICAvLyBjaGFuZ2Ugc3RyaW5nIGRhdGFcbiAgICBjb25zdCBiYXJDb2xvckVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFyQ29sb3I0Jyk7XG4gICAgY29uc3QgdGh1bWJDb2xvckVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGh1bWJDb2xvcjQnKTtcbiAgICBjb25zdCBidWJibGVDb2xvckVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnViYmxlQ29sb3I0Jyk7XG4gICAgY29uc3QgY2hhbmdlU3RyaW5nVmFsdWUgPSAoKSA9PiB7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzldID0gU3RyaW5nKGJhckNvbG9yRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzEwXSA9IFN0cmluZyh0aHVtYkNvbG9yRWxlbWVudC52YWx1ZSk7XG4gICAgICB0aGlzLnN0YXRlRm9yRm91cnRoQXBpWzExXSA9IFN0cmluZyhidWJibGVDb2xvckVsZW1lbnQudmFsdWUpO1xuICAgICAgdGVzdC5yZW5kZXJGb3VydGhTbGlkZXIoJ2FwaV9mb3VydGgnLCB0aGlzLnN0YXRlRm9yRm91cnRoQXBpKTtcbiAgICAgIHRoaXMuc3B5T25Gb3VydGhTbGlkZXIoJ2FwaV9mb3VydGgnKTtcbiAgICB9O1xuICAgIGJhckNvbG9yRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VTdHJpbmdWYWx1ZSk7XG4gICAgdGh1bWJDb2xvckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgY2hhbmdlU3RyaW5nVmFsdWUpO1xuICAgIGJ1YmJsZUNvbG9yRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGFuZ2VTdHJpbmdWYWx1ZSk7XG4gICAgXG4gICAgLy8gcmVuZGVyIHNsaWRlciB3aXRoIGRhdGEgZnJvbSBwYW5lbFxuICAgIHRlc3QucmVuZGVyRm91cnRoU2xpZGVyKCdhcGlfZm91cnRoJywgdGhpcy5zdGF0ZUZvckZvdXJ0aEFwaSk7XG4gICAgdGhpcy5zcHlPbkZvdXJ0aFNsaWRlcignYXBpX2ZvdXJ0aCcpO1xuICB9XG59XG5cbm5ldyBQYW5lbCgpO1xuZXhwb3J0IGRlZmF1bHQgUGFuZWw7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBubyBiYXNlVVJJXG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0NTc3OiAwLFxuXHQzMDk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbl9fd2VicGFja19yZXF1aXJlX18uTy5qID0gKGNodW5rSWQpID0+IChpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPT09IDApO1xuXG4vLyBpbnN0YWxsIGEgSlNPTlAgY2FsbGJhY2sgZm9yIGNodW5rIGxvYWRpbmdcbnZhciB3ZWJwYWNrSnNvbnBDYWxsYmFjayA9IChwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiwgZGF0YSkgPT4ge1xuXHR2YXIgW2NodW5rSWRzLCBtb3JlTW9kdWxlcywgcnVudGltZV0gPSBkYXRhO1xuXHQvLyBhZGQgXCJtb3JlTW9kdWxlc1wiIHRvIHRoZSBtb2R1bGVzIG9iamVjdCxcblx0Ly8gdGhlbiBmbGFnIGFsbCBcImNodW5rSWRzXCIgYXMgbG9hZGVkIGFuZCBmaXJlIGNhbGxiYWNrXG5cdHZhciBtb2R1bGVJZCwgY2h1bmtJZCwgaSA9IDA7XG5cdGlmKGNodW5rSWRzLnNvbWUoKGlkKSA9PiAoaW5zdGFsbGVkQ2h1bmtzW2lkXSAhPT0gMCkpKSB7XG5cdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG5cdFx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8obW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpZihydW50aW1lKSB2YXIgcmVzdWx0ID0gcnVudGltZShfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0fVxuXHRpZihwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbikgcGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24oZGF0YSk7XG5cdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpICYmIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKCk7XG5cdFx0fVxuXHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG5cdH1cblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uTyhyZXN1bHQpO1xufVxuXG52YXIgY2h1bmtMb2FkaW5nR2xvYmFsID0gc2VsZltcIndlYnBhY2tDaHVua3NsaWRlcl9wbHVnaW5cIl0gPSBzZWxmW1wid2VicGFja0NodW5rc2xpZGVyX3BsdWdpblwiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBkZXBlbmRzIG9uIG90aGVyIGxvYWRlZCBjaHVua3MgYW5kIGV4ZWN1dGlvbiBuZWVkIHRvIGJlIGRlbGF5ZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHVuZGVmaW5lZCwgWzgzMiw4MjJdLCAoKSA9PiAoX193ZWJwYWNrX3JlcXVpcmVfXygxNzMpKSlcbl9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fLk8oX193ZWJwYWNrX2V4cG9ydHNfXyk7XG4iXSwibmFtZXMiOlsiZGVmZXJyZWQiLCJ0ZXN0IiwicmVuZGVyRmlyc3RTbGlkZXIiLCJpZCIsInBhbmVsIiwiZWxlbSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsInJlbW92ZUNoaWxkIiwic2xpZGVyUGx1Z2luIiwibWF4IiwiTnVtYmVyIiwibWluIiwic3RlcCIsImRlZmF1bHRWYWx1ZSIsInZhbHVlU2Vjb25kIiwiaXNNdWx0aVRodW1iIiwiQm9vbGVhbiIsInNob3dCdWJibGUiLCJpc1ZlcnRpY2FsIiwic2hvd1RpY2tzIiwiYmFyQ29sb3IiLCJTdHJpbmciLCJ0aHVtYkNvbG9yIiwiYnViYmxlQ29sb3IiLCJyZW5kZXJTZWNvbmRTbGlkZXIiLCJyZW5kZXJUaGlyZFNsaWRlciIsInJlbmRlckZvdXJ0aFNsaWRlciIsIlBhbmVsIiwiY29uc3RydWN0b3IiLCJ0aGlzIiwiaW5pdCIsImNhbGxGaXJzdEFwaSIsImNhbGxTZWNvbmRBcGkiLCJjYWxsVGhpcmRBcGkiLCJjYWxsRm91cnRoQXBpIiwic2V0U3RhdGUiLCJvcHRpb25zIiwic3RhdGVGb3JGaXJzdEFwaSIsInN0YXRlRm9yU2Vjb25kQXBpIiwic3RhdGVGb3JUaGlyZEFwaSIsInN0YXRlRm9yRm91cnRoQXBpIiwiZ2V0RGF0YUZyb21QYW5lbCIsImdldERhdGFGcm9tU3RhdGUiLCJnZXREYXRhRnJvbVNlY29uZFBhbmVsIiwiZ2V0RGF0YUZyb21TZWNvbmRTdGF0ZSIsImdldERhdGFGcm9tVGhpcmRQYW5lbCIsImdldERhdGFGcm9tVGhpcmRTdGF0ZSIsImdldERhdGFGcm9tRm91cnRoUGFuZWwiLCJnZXREYXRhRnJvbUZvdXJ0aFN0YXRlIiwiZ2V0VmFsdWUiLCJ2YWx1ZSIsImdldEJvb2xlYW5WYWx1ZSIsImNoZWNrZWQiLCJnZXRTdHJpbmdWYWx1ZSIsInNweU9uU2xpZGVyIiwiaXRlbSIsInNsaWRlciIsImZpcnN0Q2hpbGQiLCJzZXRTbGlkZXJWYWx1ZSIsIm5ld0RlZmF1bHRWYWx1ZSIsImdldEF0dHJpYnV0ZSIsIm5ld0RlZmF1bHRMZWZ0VmFsdWUiLCJuZXdSaWdodFZhbHVlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1heEVsZW1lbnQiLCJtaW5FbGVtZW50Iiwic3RlcEVsZW1lbnQiLCJkZWZhdWx0VmFsdWVFbGVtZW50IiwidmFsdWVTZWNvbmRFbGVtZW50IiwiY2hhbmdlTnVtYmVyVmFsdWUiLCJtdWx0aUVsZW1lbnQiLCJidWJibGVFbGVtZW50IiwiaXNWZXJ0aWNhbEVsZW1lbnQiLCJ0aWNrc0VsZW1lbnQiLCJjaGFuZ2VCb29sZWFuVmFsdWUiLCJiYXJDb2xvckVsZW1lbnQiLCJ0aHVtYkNvbG9yRWxlbWVudCIsImJ1YmJsZUNvbG9yRWxlbWVudCIsImNoYW5nZVN0cmluZ1ZhbHVlIiwic3B5T25TZWNvbmRTbGlkZXIiLCJzcHlPblRoaXJkU2xpZGVyIiwic3B5T25Gb3VydGhTbGlkZXIiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImNhbGwiLCJtIiwiTyIsInJlc3VsdCIsImNodW5rSWRzIiwiZm4iLCJwcmlvcml0eSIsIm5vdEZ1bGZpbGxlZCIsIkluZmluaXR5IiwiaSIsImxlbmd0aCIsImZ1bGZpbGxlZCIsImoiLCJPYmplY3QiLCJrZXlzIiwiZXZlcnkiLCJrZXkiLCJzcGxpY2UiLCJyIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiaW5zdGFsbGVkQ2h1bmtzIiwiY2h1bmtJZCIsIndlYnBhY2tKc29ucENhbGxiYWNrIiwicGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24iLCJkYXRhIiwibW9yZU1vZHVsZXMiLCJydW50aW1lIiwic29tZSIsImNodW5rTG9hZGluZ0dsb2JhbCIsInNlbGYiLCJmb3JFYWNoIiwiYmluZCIsInB1c2giLCJfX3dlYnBhY2tfZXhwb3J0c19fIl0sInNvdXJjZVJvb3QiOiIifQ==