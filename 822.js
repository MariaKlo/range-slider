"use strict";(self.webpackChunkslider_plugin=self.webpackChunkslider_plugin||[]).push([[822],{58:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(537),r=i.n(s),n=i(645),a=i.n(n)()(r());a.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const o=a},468:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(537),r=i.n(s),n=i(645),a=i.n(n)()(r());a.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const o=a},822:(e,t,i)=>{var s=i(379),r=i.n(s),n=i(795),a=i.n(n),o=i(569),l=i.n(o),u=i(565),h=i.n(u),b=i(216),c=i.n(b),d=i(589),p=i.n(d),m=i(58),f={};f.styleTagTransform=p(),f.setAttributes=h(),f.insert=l().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=c();r()(m.Z,f);m.Z&&m.Z.locals&&m.Z.locals;var g=i(468),v={};v.styleTagTransform=p(),v.setAttributes=h(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=c();r()(g.Z,v);g.Z&&g.Z.locals&&g.Z.locals;class w{constructor(){Object.defineProperty(this,"observersInView",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observersInModel",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"subscribeInView",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.observersInView.push(e)}}),Object.defineProperty(this,"subscribeInModel",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.observersInModel.push(e)}}),this.observersInView=[],this.observersInModel=[]}updateModel(e,t){}updateView(){}}const y=class{constructor(e){Object.defineProperty(this,"optionsForView",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"max",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"min",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"step",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"defaultValue",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"valueSecond",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"isMultiThumb",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"showBubble",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"isVertical",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"showTicks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ticksValues",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"barColor",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"thumbColor",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"bubbleColor",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observers",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observer",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observerInModel",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.max=Number(0===e.max?0:e.max||100),this.min=Number(e.min||0),this.step=Number(e.step),this.defaultValue=Number(0===e.defaultValue?0:e.defaultValue||50),this.valueSecond=Number(0===e.valueSecond?0:e.valueSecond||70),this.isMultiThumb=e.isMultiThumb||!1,this.showBubble=e.showBubble||!1,this.isVertical=e.isVertical||!1,this.showTicks=e.showTicks||!1,this.ticksValues=[],this.barColor=e.barColor||"linear-gradient(180deg, #cf6f7f 0%, #ea6666 100%)",this.thumbColor=e.thumbColor||"linear-gradient(180deg,  #cf6f7f 0%, #ea6666 100%)",this.bubbleColor=e.bubbleColor||"#eac966",this.observers=[],this.observer=new w,this.optionsForView={max:this.max,min:this.min,step:this.step,defaultValue:this.defaultValue,valueSecond:this.valueSecond,isMultiThumb:this.isMultiThumb,showBubble:this.showBubble,isVertical:this.isVertical,showTicks:this.showTicks,barColor:this.barColor,thumbColor:this.thumbColor,bubbleColor:this.bubbleColor}}init(){this.getTicks(),this.observer.subscribeInModel(this.observerInModel),this.updateObservers()}update(e,t){this.isMultiThumb?this.limitToggle(e,t):this.limitStep(e,t)}updateObservers(){this.observers.forEach((e=>{e.updateView()}))}setDefaultValue(e){this.defaultValue=e}setSecondValue(e){this.valueSecond=e}calcNearestMinValueConsideringStep(e,t=this.step){const i=e-e%t;return e%t>t/2?t+i:i}getTicks(e=this.optionsForView.step,t=this.showTicks){e<=0&&(e=1);const i=[];return i}limitToggle(e,t){(t?e<this.valueSecond:e>this.defaultValue)?this.limitStep(e,t):this.updateObservers()}limitStep(e,t){const i=e%this.step==0;if(t)if(i)this.setDefaultValue(e);else{const t=this.calcNearestMinValueConsideringStep(e);this.setDefaultValue(t),this.updateObservers()}else if(i)this.setSecondValue(e);else{const t=this.calcNearestMinValueConsideringStep(e);this.setSecondValue(t),this.updateObservers()}}};const T=class{constructor(e,t){Object.defineProperty(this,"view",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"model",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.view=e,this.model=t,this.init()}init(){this.view.init(),this.model.init(),this.view.options=this.model.optionsForView}updateModel(e,t){this.model.update(e,t)}updateView(){this.view.options.defaultValue=this.model.defaultValue,this.view.options.valueSecond=this.model.valueSecond,this.view.setInput()}};const V=class{constructor(){Object.defineProperty(this,"bar",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}createProgressBar(e){this.bar=document.createElement("div"),this.bar.classList.add("range-slider__progress-bar"),e.append(this.bar)}calcPercent(e,t,i){return(e-t)/(i-t)*100}setDefault(e,t,i){e?(this.bar.style.left=`${t}%`,this.bar.style.right=100-(i||0)+"%"):(this.bar.style.left=String(0),this.bar.style.right=100-t+"%")}changeBarColor(e){this.bar.style.background=e}};const P=class{constructor(){Object.defineProperty(this,"formDiv",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"input",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"secondInput",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}init(e,t,i,s){this.createForm(e),this.createInput(t),this.setMin(t,i),this.setMax(t,s)}createForm(e){this.formDiv=document.createElement("div"),this.formDiv.classList.add("range-slider__form"),e.append(this.formDiv)}createInput(e){e?(this.input=document.createElement("input"),this.input.type="range",this.input.classList.add("range-slider__input"),this.input.classList.add("range-slider__input_first"),this.formDiv.append(this.input),this.secondInput=document.createElement("input"),this.secondInput.type="range",this.secondInput.classList.add("range-slider__input"),this.secondInput.classList.add("range-slider__input_second"),this.formDiv.append(this.secondInput)):(this.input=document.createElement("input"),this.input.type="range",this.input.classList.add("range-slider__input"),this.formDiv.append(this.input))}setValues(e,t,i){this.input.value=String(t),e&&this.secondInput&&(this.secondInput.value=String(i))}setMax(e,t=100){this.input.max=String(t),e&&(this.secondInput.max=String(t))}setMin(e,t){this.input.min=String(t),e&&(this.secondInput.min=String(t))}};const _=class{constructor(){Object.defineProperty(this,"createTicks",{enumerable:!0,configurable:!0,writable:!0,value:(e,t)=>{const i=document.createElement("div");i.classList.add("range-slider__ticks");const s=[];for(let r=0;r<e.length;r+=1){const n=document.createElement("div");n.classList.add("range-slider__tick");const a=e[r];n.textContent=String(`â€“ ${a}`),i.append(n);const o=e[0],l=e[e.length-1],u=Math.round((a-o)/(l-o)*100);n.style.left=`${u}%`,s.push({element:n,value:a}),n.style.marginLeft=`-${this.placeTicks(t)}%`}return{ticksElement:i,values:s}}}),Object.defineProperty(this,"placeTicks",{enumerable:!0,configurable:!0,writable:!0,value:e=>(.42*e+777.8)/e})}};const O=class{constructor(){Object.defineProperty(this,"firstThumb",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"secondThumb",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"showBubble",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"showSecondBubble",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}init(e,t,i,s,r){this.createThumb(e,t),i&&(this.createBubbleElement(t,this.firstThumb),this.writeBubbleValue(t,s,r))}createThumb(e,t){this.firstThumb=document.createElement("div"),this.firstThumb.className="range-slider__thumb",e.append(this.firstThumb),t&&(this.firstThumb.classList.add("range-slider__thumb_first"),this.secondThumb=document.createElement("div"),this.secondThumb.classList.add("range-slider__thumb"),this.secondThumb.classList.add("range-slider__thumb_second"),e.append(this.secondThumb))}createBubbleElement(e,t){this.showBubble=document.createElement("p"),this.showBubble.classList.add("range-slider__bubble"),t.append(this.showBubble),e&&(this.showSecondBubble=document.createElement("p"),this.showSecondBubble.classList.add("range-slider__bubble"),this.secondThumb.append(this.showSecondBubble))}writeBubbleValue(e,t,i){this.showBubble&&(this.showBubble.textContent=`First value: ${String(t)}`,e&&(this.showSecondBubble.textContent=`Second value: ${String(i)}`))}placeThumb(e,t,i){this.firstThumb.style.left=`${t}%`,e&&(this.secondThumb.style.right=100-(i||0)+"%")}rotateBubble(){const e="range-slider__bubble_vertical";this.showBubble.classList.add(e),this.showSecondBubble&&this.showSecondBubble.classList.add(e)}changeThumbColor(e,t){this.firstThumb.style.background=e,t&&(this.secondThumb.style.background=e)}changeBubbleColor(e,t){const i=t&&this.showSecondBubble;this.showBubble&&(this.showBubble.style.backgroundColor=e),i&&(this.showSecondBubble.style.backgroundColor=e)}};const S=class{constructor(e,t){Object.defineProperty(this,"parent",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wrapper",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"warning",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"track",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"input",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"firstInput",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"secondInput",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ticks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"bar",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"thumb",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"form",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"options",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observers",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observer",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observerInView",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"init",{enumerable:!0,configurable:!0,writable:!0,value:()=>{this.createWrapper(),this.observer.subscribeInView(this.observerInView),this.form.init(this.wrapper,this.options.isMultiThumb,this.options.min,this.options.max),this.createTrack(this.wrapper),this.bar.createProgressBar(this.track),this.bar.changeBarColor(this.options.barColor),this.thumb.init(this.track,this.options.isMultiThumb,this.options.showBubble,this.options.defaultValue,this.options.valueSecond),this.thumb.changeThumbColor(this.options.thumbColor,this.options.isMultiThumb),this.thumb.changeBubbleColor(this.options.bubbleColor,this.options.isMultiThumb),this.setInput(),this.eventInput(),this.bar.bar.onmousedown=e=>{this.clickOnBar(e)},this.track.onmousedown=e=>{this.clickOnBar(e)},this.options.step&&this.setStep(),this.options.isVertical&&this.wrapper.classList.add("range-slider_vertical");if(this.options.isVertical&&this.options.showBubble&&this.thumb.rotateBubble(),this.options.showTicks){const e=this.options.max,t=Math.floor(e/10),i=[];for(let s=this.options.min;s<=e;s+=t)i.push(s);const s=this.ticks.createTicks(i,this.wrapper.offsetWidth),{ticksElement:r}=s,n=s.values;this.wrapper.append(r);for(let e=0;e<n.length;e+=1)n[e].element.addEventListener("click",this.onClick(n[e].value))}this.showWarnings()}}),Object.defineProperty(this,"createWrapper",{enumerable:!0,configurable:!0,writable:!0,value:()=>{this.wrapper=document.createElement("div"),this.wrapper.classList.add("range-slider"),this.setAttributesValue(),this.parent.append(this.wrapper)}}),Object.defineProperty(this,"setAttributesValue",{enumerable:!0,configurable:!0,writable:!0,value:()=>{this.options.isMultiThumb?(this.wrapper.setAttribute("first-value",String(this.options.defaultValue)),this.wrapper.setAttribute("second-value",String(this.options.valueSecond))):this.wrapper.setAttribute("default-value",String(this.options.defaultValue))}}),Object.defineProperty(this,"setInput",{enumerable:!0,configurable:!0,writable:!0,value:()=>{this.form.setValues(this.options.isMultiThumb,this.options.defaultValue,this.options.valueSecond);const e=this.bar.calcPercent(Number(this.form.input.value),Number(this.form.input.min),Number(this.form.input.max)),t=this.form.secondInput?this.bar.calcPercent(Number(this.form.secondInput.value),Number(this.form.secondInput.min),Number(this.form.secondInput.max)):NaN;this.bar.setDefault(this.options.isMultiThumb,e,t),this.thumb.placeThumb(this.options.isMultiThumb,e,t)}}),Object.defineProperty(this,"onInput",{enumerable:!0,configurable:!0,writable:!0,value:e=>e?()=>{this.update(Number(this.form.input.value),!0)}:()=>{this.update(Number(this.form.secondInput.value),e)}}),Object.defineProperty(this,"eventInput",{enumerable:!0,configurable:!0,writable:!0,value:()=>{this.form.input.addEventListener("input",this.onInput(!0)),this.options.isMultiThumb&&this.form.secondInput.addEventListener("input",this.onInput(!1))}}),Object.defineProperty(this,"getValueByCoords",{enumerable:!0,configurable:!0,writable:!0,value:(e,t)=>{let i=t.width;const s=this.options.max-this.options.min;let r=e.clientX-t.left;this.options.isVertical&&(r=e.clientY-t.top,i=t.height);const n=r/i*100;return Math.round(this.options.min+s*n/100)}}),Object.defineProperty(this,"clickOnBar",{enumerable:!0,configurable:!0,writable:!0,value:e=>{const t=this.track.getBoundingClientRect(),i=this.getValueByCoords(e,t);this.onClick(i)()}}),Object.defineProperty(this,"update",{enumerable:!0,configurable:!0,writable:!0,value:(e,t)=>{t?this.options.defaultValue=e:this.options.valueSecond=e,this.setInput(),this.observers.forEach((i=>{i.updateModel(e,t)})),this.setAttributesValue(),this.thumb.writeBubbleValue(this.options.isMultiThumb,this.options.defaultValue,this.options.valueSecond)}}),Object.defineProperty(this,"onClick",{enumerable:!0,configurable:!0,writable:!0,value:e=>()=>{this.update(e,!0)}}),this.ticks=new _,this.bar=new V,this.thumb=new O,this.form=new P,this.observer=new w,this.parent=e,this.options=t,this.observers=[]}createTrack(e){this.track=document.createElement("div"),this.track.classList.add("range-slider__track"),e.append(this.track)}setStep(){this.form.input.setAttribute("step",String(this.options.step)),this.options.isMultiThumb&&this.form.secondInput.setAttribute("step",String(this.options.step)),this.options.step<=0&&(this.form.input.setAttribute("step",String(1)),this.options.isMultiThumb&&this.form.secondInput.setAttribute("step",String(1))),this.options.step>this.options.max&&(this.form.input.setAttribute("step",String(1)),this.options.isMultiThumb&&this.form.secondInput.setAttribute("step",String(1)))}showWarnings(){this.showWarningsForMaxAndMin(),this.showWarningForWrongDefaultAndMaxValues(),this.showWarningForWrongDefaultAndMinValues(),this.showWarningSecondValIsLessThanFirst()}showWarningsForMaxAndMin(){this.options.min>=this.options.max&&(this.warning=document.createElement("p"),this.warning.classList.add("range-slider__warning"),this.warning.innerText="Your min value is bigger than max value or equal to it. Please, change your values",this.wrapper.append(this.warning),this.options.isVertical&&this.warning.classList.add("range-slider__warning_vertical"))}showWarningForWrongDefaultAndMaxValues(){this.options.defaultValue>this.options.max&&(this.warning=document.createElement("p"),this.warning.classList.add("range-slider__second-warning"),this.warning.innerText="Your default value is bigger than max value. Please, change your values",this.wrapper.append(this.warning),this.options.isVertical&&this.warning.classList.add("range-slider__second-warning_vertical")),this.options.isMultiThumb&&this.options.valueSecond>this.options.max&&(this.warning=document.createElement("p"),this.warning.classList.add("range-slider__third-warning"),this.warning.innerText="Your second value is bigger than max value. Please, change your values",this.wrapper.append(this.warning),this.options.isVertical&&this.warning.classList.add("range-slider__third-warning_vertical"))}showWarningForWrongDefaultAndMinValues(){this.options.defaultValue<this.options.min&&(this.warning=document.createElement("p"),this.warning.classList.add("range-slider__fourth-warning"),this.warning.innerText="Your default value is less than min value. Please, change your values",this.wrapper.append(this.warning),this.options.isVertical&&this.warning.classList.add("range-slider__fourth-warning_vertical")),this.options.isMultiThumb&&this.options.valueSecond<this.options.min&&(this.warning=document.createElement("p"),this.warning.classList.add("range-slider__fifth-warning"),this.warning.innerText="Your second value is less than min value. Please, change your values",this.wrapper.append(this.warning),this.options.isVertical&&this.warning.classList.add("range-slider__fifth-warning_vertical"))}showWarningSecondValIsLessThanFirst(){this.options.isMultiThumb&&this.options.defaultValue>this.options.valueSecond&&(this.warning=document.createElement("p"),this.warning.classList.add("range-slider__sixth-warning"),this.warning.innerText="Your second value is less than first value. Please, change your values",this.wrapper.append(this.warning),this.options.isVertical&&this.warning.classList.add("range-slider__sixth-warning_vertical"))}};var j=i(755);j.fn.sliderPlugin=function(e){return new T(new S(this,e),new y({max:e.max,min:e.min,step:e.step,defaultValue:e.isMultiThumb?e.defaultValue:e.valueSecond,valueSecond:e.valueSecond,isMultiThumb:e.isMultiThumb,showBubble:e.showBubble,isVertical:e.isVertical,showTicks:e.showTicks,barColor:e.barColor,thumbColor:e.thumbColor,bubbleColor:e.bubbleColor}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,